@model dynamic

@{
    ViewBag.Title = "System Reports";
}
@section styles{
    <link href="~/Content/KendoBoxStyles.css" rel="stylesheet" />
    <link href="~/Content/DaySummaryReport.css" rel="stylesheet" />
}

<div id="example">
    <div class="box wide hidden-on-narrow">
        <div class="box-col">
        </div>
        <div class="box-col">
        </div>
        <div class="box-col">
            <h4>Select Page size</h4>
            <select id="paper" style="width: 100px;">
                <option value="size-a4" selected>A4</option>
                <option value="size-letter">Letter</option>
                <option value="size-executive">Executive</option>
            </select>
        </div>
        <div class="box-col" style="padding-right: 10px;">
            <h4>From</h4>
            <input id="startdatepicker" style="width: 100%" />
        </div>
        <div class="box-col" style="padding-right: 10px;">
            <h4>To</h4>
            <input id="enddatepicker" style="width: 100%" />
        </div>
        <div class="box-col" style="padding-right: 10px;">
            <h4>Select Clerk</h4>
            <input id="clerk" style="width: 170px" />
        </div>
        <div class="box-col">
            <h4>Search</h4>
            <button class="search-btn k-button" onclick="refreshGrids()">Search</button>
        </div>
        <div class="box-col">
            <img src="/Images/ajax-loader.gif" class="summaryLoading" style="display: none; padding-top: 40px">
        </div>
        @if (ViewBag.HasExportAccess == true)
            {
            <div class="box-col">
                <h4>Get PDF</h4>
                <button class="export-pdf k-button" onclick="getPDF('.pdf-page')">Export</button>
            </div>
                <div class="box-col">
                    <h4>Print Report</h4>
                    <button class="export-pdf k-button" onclick="printReport('.pdf-page')">Print</button>
                </div>
        }
        @if (ViewBag.HasLockReceiptsAccess == true)
            {
            <div class="box-col">
                <h4>Lock Receipts</h4>
                <button class="lock-receipts k-button">Lock Selected Receipts</button>
            </div>
        }
    </div>

    <div class="page-container hidden-on-narrow">
        <div class="pdf-page size-a4">
            @*<div class="pdf-header">
                    <span class="company-logo">
                        <img src="~/Images/company_logo.jpg" /> Cash Receipting System
                    </span>
                    <span class="invoice-number"></span>
                </div>*@
            <div class="pdf-footer">
                <p>
                    Cash Receipting System<br />
                </p>
            </div>
            <div class="for">
                <h3>Summary report of the day <span id="clerkName"></span></h3>
                <p>
                    Summary Date From <span class="selectedStartDate"></span> to <span class="selectedEndDate"></span>
                </p>
            </div>

            <div class="from" style="display: none">
            </div>
            <div class="pdf-body">
                <div id="grid"></div>
                <br />
                <h4>Tenders</h4>
                <div id="tendersGrid"></div>
                <p class="signature">
                    Signature: ________________ <br /><br />
                    Generation Date: <span class="todayDate"></span>
                </p>
            </div>
        </div>
    </div>

    <div class="responsive-message"></div>

    <style>
        /*
                Use the DejaVu Sans font for display and embedding in the PDF file.
                The standard PDF fonts have no support for Unicode characters.
            */
        .pdf-page {
            font-family: "DejaVu Sans", "Arial", sans-serif;
        }
    </style>

    <script>
        // Import DejaVu Sans font for embedding

        // NOTE: Only required if the Kendo UI stylesheets are loaded
        // from a different origin, e.g. cdn.kendostatic.com
        kendo.pdf.defineFont({
            "DejaVu Sans": "~/fonts/DejaVu/DejaVuSans.ttf",
            "DejaVu Sans|Bold": "~/fonts/DejaVu/DejaVuSans-Bold.ttf",
            "DejaVu Sans|Bold|Italic": "~/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "DejaVu Sans|Italic": "~/fonts/DejaVu/DejaVuSans-Oblique.ttf"
        });
    </script>

    <!-- Load Pako ZLIB library to enable PDF compression -->
    <script src="~/Scripts/KenodUI2017.1.223/js/pako_deflate.min.js"></script>
    <script>
        var summaryGrid, tendersGrid;

        function printReport() {
            //check this link
            //http://docs.telerik.com/kendo-ui/controls/data-management/grid/print-export

            //var win = window.open('', '', 'width=800, height=500'),
            //doc = win.document.open();
            //doc.write($('.pdf-page').html());
            //doc.close();
            //win.print();
            var printContents = $('.pdf-page').html();
            var originalContents = document.body.innerHTML;
            document.body.innerHTML = printContents;
            window.print();
            //document.body.innerHTML = originalContents;
            location.reload();
        }

        function getPDF(selector) {
            kendo.drawing.drawDOM($(selector))
                .then(function(group) {
                    kendo.drawing.pdf.saveAs(group, "Invoice.pdf");
                });
        }

        function getSelectedClerk() {
            return $("#clerk").data("kendoDropDownList").value();
        }

        function getSelectedStartDate() {
            return kendo.toString($("#startdatepicker").data("kendoDatePicker").value(), "d");
        }

        function getSelectedEndDate() {
            return kendo.toString($("#enddatepicker").data("kendoDatePicker").value(), "d");
        }

        function refreshGrids() {
            var grid = summaryGrid.data("kendoGrid");
            grid.dataSource.read();
            grid.refresh();

            var tendersDataGrid = tendersGrid.data("kendoGrid");
            tendersDataGrid.dataSource.read();
            tendersDataGrid.refresh();
        }

        $(document)
            .ready(function() {
                $('.todayDate').text(kendo.toString(new Date(), "d"));
                $('#clerk')
                    .kendoDropDownList({
                        dataTextField: "ClerkName",
                        dataValueField: "Id",
                        optionLabel: "Select Clerk...",
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: '@Url.Action("GetAllClerks")'
                                }
                            }
                        },
                        change: function (e) {
                            //var value = this.value();
                            $("#clerkName").html("(" + this.text() + ")");
                            refreshGrids();
                        }
                    });

                $("#startdatepicker")
                    .kendoDatePicker({
                        format: "MM/dd/yyyy",
                        value: new Date(),
                        change: function () {
                            var value = this.value();
                            $('.selectedStartDate').text(kendo.toString(value, "d"));
                            //refreshGrids();
                        }
                    });

                $("#enddatepicker")
                    .kendoDatePicker({
                        format: "MM/dd/yyyy",
                        value: new Date(),
                        change: function () {
                            var value = this.value();
                            $('.selectedEndDate').text(kendo.toString(value, "d"));
                            //refreshGrids();
                        }
                    });

                var aggregate = [
                    { field: "Total", aggregate: "sum" }
                ];
                var columns = [
                    {
                        width: 50,
                        template: "<input type='checkbox' class='checkbox' />",
                        headerTemplate: "<input type='checkbox' id='checkAll'/>"
                    },
                    { field: "ReceiptNumber", title: "Receipt Number", width: 150 },
                    { field: "DepartmentName", title: "Department Name" },
                    { width: 90, field: "Locked", title: "Is Locked", hidden: @((!(bool)ViewBag.HasLockReceiptsAccess).ToString().ToLower())},
                    {
                        field: "Total",
                        title: "Total",
                        width: 150,
                        aggregates: ["sum"],
                        footerTemplate: "Total: #=kendo.toString(sum, 'C')#",
                        format: "{0:n2}",
                        headerAttributes: { style: "text-align:right" },
                        attributes: { class: "text-right" }
                    }
                ];
                summaryGrid = $("#grid")
                    .kendoGrid({
                        editable: false,
                        sortable: true,
                        resizable: true,
                        reorderable: true,
                        dataSource: new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: '@Url.Action("DepartmentsSummary_Read", "SysReports")',
                                    dataType: "json",
                                },
                                parameterMap: function (options, operation) {
                                    if (operation === "read") {
                                        return { startDate: getSelectedStartDate(), endDate: getSelectedEndDate(), clerkId: getSelectedClerk() };
                                    }
                                }
                            },
                            batch: true,
                            pageSize: 1000,
                            serverPaging: false,
                            schema: {
                                data: "Data",
                                total: "Total",
                                model: {
                                    id: "ReceiptHeaderID",
                                    fields: {
                                        ReceiptHeaderID: {
                                            type: "number"
                                        },
                                        DepartmentId: {
                                            type: "number"
                                        },
                                        ReceiptNumber: {
                                            type: "string"
                                        },
                                        DepartmentName: {
                                            type: "string"
                                        },
                                        Total: { type: "number" },
                                        Locked: { type:"string" }
                                    }
                                },
                                errors: "Errors"
                            },
                            aggregate: aggregate,
                            error: function (ee) {
                                if (ee.errors && ee.errors["_readKey"]) {
                                    notify.showError(ee.errors["_readKey"].errors[0]);
                                } else {
                                    notify.showError('An error has been occurred, please contact system admin.');
                                }
                                this.cancelChanges();
                            },
                            requestStart: function (e) {
                                $('.summaryLoading').show();
                            },
                            requestEnd: function (e) {
                                $('.summaryLoading').hide();
                            }
                        }),
                        columns: columns,
                        dataBound: function (e) {
                            $('.selectedStartDate').text(getSelectedStartDate());
                            $('.selectedEndDate').text(getSelectedEndDate());
                        }
                    });

                var tendersColumns = [
                    { field: "PaymentMethod", title: "Payment Method", width: 150 },
                    {
                        field: "TotalAmount",
                        title: "Total",
                        width: 150,
                        aggregates: ["sum"],
                        footerTemplate: "Total: #=kendo.toString(sum, 'C')#",
                        format: "{0:n2}",
                        headerAttributes: { style: "text-align:right" },
                        attributes: { class: "text-right" }
                    }
                ];
                tendersGrid = $("#tendersGrid")
                    .kendoGrid({
                        editable: false,
                        sortable: true,
                        resizable: true,
                        reorderable: true,
                        dataSource: new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: '@Url.Action("TendersSummary_Read", "SysReports")',
                                    dataType: "json",
                                },
                                parameterMap: function (options, operation) {
                                    if (operation === "read") {
                                        return { startDate: getSelectedStartDate(), endDate: getSelectedEndDate(), clerkId: getSelectedClerk() };
                                    }
                                }
                            },
                            batch: true,
                            pageSize: 10,
                            serverPaging: false,
                            schema: {
                                data: "Data",
                                total: "Total",
                                model: {
                                    id: "PaymentMethodId",
                                    fields: {
                                        PaymentMethodId: {
                                            type: "number"
                                        },
                                        PaymentMethod: { type: "string" },
                                        TotalAmount: { type: "number" }
                                    }
                                },
                                errors: "Errors"
                            },
                            aggregate: [{ field: "TotalAmount", aggregate: "sum" }],
                            error: function (ee) {
                                if (ee.errors && ee.errors["_readKey"]) {
                                    notify.showError(ee.errors["_readKey"].errors[0]);
                                } else {
                                    notify.showError('An error has been occurred, please contact system admin.');
                                }
                                this.cancelChanges();
                            },
                            requestStart: function (e) {
                            },
                            requestEnd: function (e) {
                            }
                        }),
                        columns: tendersColumns,
                        dataBound: function (e) {
                        }
                    });

                $("#paper")
                    .kendoDropDownList({
                        change: function () {
                            $(".pdf-page")
                                .removeClass("size-a4")
                                .removeClass("size-letter")
                                .removeClass("size-executive")
                                .addClass(this.value());
                        }
                    });

                var grid = summaryGrid.data("kendoGrid");
                //bind click event to the checkbox
                grid.table.on("click", ".checkbox", selectRow);

                $(".lock-receipts").bind("click",
                    function() {
                        var checked = [];
                        for (var i in checkedIds) {
                            if (checkedIds[i]) {
                                checked.push(i);
                            }
                        }
                        if (checked.length)
                            notify.confirm('Lock Receipts',
                                'Are you sure you want to lock all of the selected receipts?',
                                function() {

                                });
                        else {
                            notify.showError('Please select at least one receipt to lock.');
                        }
                    });

            });

        var checkedIds = {};

        //on click of the checkbox:
        function selectRow() {
            var checked = this.checked,
                row = $(this).closest("tr"),
                grid = $("#grid").data("kendoGrid"),
                dataItem = grid.dataItem(row);

            checkedIds[dataItem.id] = checked;
            if (checked) {
                //-select the row
                row.addClass("k-state-selected");
            } else {
                //-remove selection
                row.removeClass("k-state-selected");
            }
        }

        function lockReceipts(receiptsIds) {
            $.post('@Url.Action("LockReceipts", "ReceiptHeaders")',
                    {
                        ReceiptsIds: receiptsIds
                    })
                .done(function (data) {
                    if (data) {
                        if (data.Result) {
                            notify.showSuccess(data.Message);
                            refreshGrids();
                        } else {
                            notify.showError(data.Message);
                        }
                    }
                });
    }
    </script>
</div>

@Html.Partial("_HighlightMenu", 7)
